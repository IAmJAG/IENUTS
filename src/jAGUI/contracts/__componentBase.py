
from PySide6.QtCore import QAbstractAnimation, QSettings
from PySide6.QtWidgets import QLayout, QMainWindow, QWidget


class iComponentBase:

        def __init__(self, parent: QWidget = None, name: str = '', *args, **kwargs): ... # type: ignore
        def Load(self): ...
        def setupUI(self, layout: QLayout | None = None): ...

        @property
        def Animations(self) -> dict[str, QAbstractAnimation]: ...

        @property
        def DefaultAnimation(self) -> str: ...
        @DefaultAnimation.setter
        def DefaultAnimation(self, value: str): ...

        @property
        def ContentSpacing(self) -> int: ...
        @ContentSpacing.setter
        def ContentSpacing(self, value: int): ...

        @property
        def ContentMargins(self) -> int | tuple[int] | list[int]: ...
        @ContentMargins.setter
        def ContentMargins(self, value: int | tuple[int] | list[int]): ...

        @property
        def Layout(self) -> QLayout: ...
        @Layout.setter
        def Layout(self, value: QLayout) -> None: ...

        @property
        def Parent(self) -> QWidget: ...
        @Parent.setter
        def Parent(self, value: QWidget): ...

        @property
        def Name(self) -> str: ...
        @Name.setter
        def Name(self, value: str): ...

        @property
        def Settings(self) -> QSettings: ...

        @property
        def IsVisible(self) -> bool: ...
        @IsVisible.setter
        def IsVisible(self, value: bool): ...

        def setWidth(self, value: int): ...

        @property
        def MainWindow(self) -> QMainWindow: ...
